{"version":3,"file":"circularProgressBar.esm.js","sources":["../sources/helpers/defaults.js","../sources/helpers/function.js","../sources/index.js"],"sourcesContent":["/**\r\n * @typedef {Object} - Default object\r\n * @prop {String} [colorSlice] - Progress color circle\r\n * @prop {String} [fontColor] - Font color\r\n * @prop {String} [fontSize] - Font size\r\n * @prop {Number} [fontWeight] - Font weight\r\n * @prop {Array} [linearGradient] - Linear gradien for circle\r\n * @prop {Boolean} [number] - Show/hide number\r\n * @prop {Boolean} [round] - Path rounding\r\n * @prop {String} [fill] - Inner circle color\r\n * @prop {String} [unit] - Different unit instead of percentage (%) inside the circle\r\n * @prop {Number} [rotation] - Chart rotation\r\n * @prop {Number} [size] - Size progress bar width and height in px\r\n * @prop {Number} [stroke] - Stroke width, chart thickness\r\n */\r\n/**\r\n * Returns the default options of the component\r\n * @return {CPBOptions}\r\n */\r\nconst defaultOptions = {\r\n  colorSlice: \"#00a1ff\",\r\n  fontColor: \"#000\",\r\n  fontSize: \"1.6rem\",\r\n  fontWeight: 400,\r\n  lineargradient: false,\r\n  number: true,\r\n  round: false,\r\n  fill: \"none\",\r\n  unit: \"%\",\r\n  rotation: -90,\r\n  size: 200,\r\n  stroke: 10,\r\n};\r\n\r\nexport default defaultOptions;\r\n","/**\r\n *\r\n * @param {Object} object\r\n * @returns {String}\r\n */\r\nconst styleTransform = ({ rotation, animationSmooth }) => {\r\n  const smoothAnimation = animationSmooth\r\n    ? `transition: stroke-dashoffset ${animationSmooth}`\r\n    : \"\";\r\n\r\n  return `transform:rotate(${rotation}deg);transform-origin: 50% 50%;${smoothAnimation}`;\r\n};\r\n\r\n/**\r\n * Set \"stroke-dasharray\": \"1, 2\"\r\n * @param {String} type\r\n * @returns {Object}\r\n */\r\nconst strokeDasharray = (type) => {\r\n  return {\r\n    \"stroke-dasharray\": type || \"264\",\r\n  };\r\n};\r\n\r\n/**\r\n * Set type stroke-linecap\r\n * @param {String} round\r\n * @returns {Object}\r\n */\r\nconst strokeLinecap = ({ round }) => {\r\n  return {\r\n    \"stroke-linecap\": round ? \"round\" : \"\",\r\n  };\r\n};\r\n\r\n/**\r\n * Set font sieze/weight\r\n *\r\n * @param {Object} options\r\n * @returns {Object}\r\n */\r\nconst fontSettings = (options) => {\r\n  return {\r\n    \"font-size\": options.fontSize,\r\n    \"font-weight\": options.fontWeight,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} element\r\n * @returns {HTMLElement}\r\n */\r\nconst querySelector = (element) => document.querySelector(element);\r\n\r\n/**\r\n * Set color or linear-gradient\r\n *\r\n * @param {String} element\r\n * @param {Object} object\r\n */\r\nconst setColor = (element, { lineargradient, index, colorSlice }) => {\r\n  element.setAttribute(\r\n    \"stroke\",\r\n    lineargradient ? `url(#linear-${index})` : colorSlice,\r\n  );\r\n};\r\n\r\n/**\r\n * Set attribute to specific element\r\n *\r\n * @param {String} element\r\n * @param {Object} object\r\n */\r\nconst setAttribute = (element, object) => {\r\n  for (const key in object) {\r\n    element?.setAttribute(key, object[key]);\r\n  }\r\n};\r\n\r\n/**\r\n * Create svg element\r\n *\r\n * @param {String} type\r\n * @returns {SVGElement}\r\n */\r\nconst createNSElement = (type) =>\r\n  document.createElementNS(\"http://www.w3.org/2000/svg\", type);\r\n\r\n/**\r\n * Create svg tspan\r\n *\r\n * @param {String} className\r\n * @param {String} unit\r\n * @returns {HTMLElement}\r\n */\r\nconst tspan = (className, unit) => {\r\n  const element = createNSElement(\"tspan\");\r\n\r\n  element.classList.add(className);\r\n  if (unit) element.textContent = unit;\r\n  return element;\r\n};\r\n\r\n/**\r\n * Function generate stroke-dashoffset\r\n *\r\n * @param {Number} count\r\n * @param {Boolean} inverse - Counterclockwise animation\r\n * @param {Number} cut - Angle of the circle sector\r\n * @returns {Number}\r\n */\r\nconst dashOffset = (count, inverse, cut) => {\r\n  const cutChar = cut ? (264 / 100) * (100 - cut) : 264;\r\n  const angle = 264 - (count / 100) * cutChar;\r\n\r\n  // https://github.com/tomickigrzegorz/circular-progress-bar/issues/87\r\n  // inverse option is not working in ios safari\r\n  // return inverse ? `${264 - angle}` : angle;\r\n  return inverse ? -angle : angle;\r\n};\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n * @param {HTMLElement} el\r\n * @param {String} type\r\n */\r\nconst insertAdElement = (element, el, type = \"beforeend\") =>\r\n  element.insertAdjacentElement(type, el);\r\n\r\n/**\r\n * Generator function linear-gradient stop svg elements\r\n *\r\n * @param {Object} object\r\n */\r\nconst gradient = ({ index, lineargradient }) => {\r\n  const defsElement = createNSElement(\"defs\");\r\n  const linearGradient = createNSElement(\"linearGradient\");\r\n  linearGradient.id = `linear-${index}`;\r\n\r\n  const countGradient = [].slice.call(lineargradient);\r\n\r\n  defsElement.appendChild(linearGradient);\r\n\r\n  let number = 0;\r\n  countGradient.map((item) => {\r\n    const stopElements = createNSElement(\"stop\");\r\n\r\n    const stopObj = {\r\n      offset: `${number}%`,\r\n      \"stop-color\": `${item}`,\r\n    };\r\n    setAttribute(stopElements, stopObj);\r\n\r\n    linearGradient.appendChild(stopElements);\r\n    number += 100 / (countGradient.length - 1);\r\n  });\r\n\r\n  return defsElement;\r\n};\r\n\r\n/**\r\n * A function that generates tspan\r\n * elements with a number and unit\r\n *\r\n * @param {Object} options - Global configuration\r\n * @param {String} className\r\n */\r\nconst percent = (options, className) => {\r\n  const creatTextElementSVG = createNSElement(\"text\");\r\n\r\n  creatTextElementSVG.classList.add(`${className}-text-${options.index}`);\r\n\r\n  // create tspan element with number\r\n  // and insert to svg text element\r\n  insertAdElement(\r\n    creatTextElementSVG,\r\n    tspan(`${className}-percent-${options.index}`),\r\n  );\r\n\r\n  // create and insert unit to text element\r\n  insertAdElement(\r\n    creatTextElementSVG,\r\n    tspan(`${className}-unit-${options.index}`, options.unit),\r\n  );\r\n\r\n  // config to svg text\r\n  const obj = {\r\n    x: \"50%\",\r\n    y: \"50%\",\r\n    fill: options.fontColor,\r\n    \"text-anchor\": \"middle\",\r\n    dy: options.textPosition || \"0.35em\",\r\n    ...fontSettings(options),\r\n  };\r\n\r\n  setAttribute(creatTextElementSVG, obj);\r\n  return creatTextElementSVG;\r\n};\r\n\r\nexport {\r\n  createNSElement,\r\n  dashOffset,\r\n  fontSettings,\r\n  gradient,\r\n  insertAdElement,\r\n  percent,\r\n  querySelector,\r\n  setAttribute,\r\n  setColor,\r\n  strokeDasharray,\r\n  strokeLinecap,\r\n  styleTransform,\r\n};\r\n","import defaultOptions from \"./helpers/defaults\";\r\nimport {\r\n  createNSElement,\r\n  dashOffset,\r\n  fontSettings,\r\n  gradient,\r\n  insertAdElement,\r\n  percent,\r\n  querySelector,\r\n  setAttribute,\r\n  setColor,\r\n  strokeDasharray,\r\n  strokeLinecap,\r\n  styleTransform,\r\n} from \"./helpers/function\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport default class CircularProgressBar {\r\n  /**\r\n   * CircularProgressBar constructor\r\n   *\r\n   * @param {String} pieName - class name\r\n   * @param {Object} globalObj - global configuration\r\n   */\r\n  constructor(pieName, globalObj = {}) {\r\n    this._className = pieName;\r\n    this._globalObj = globalObj;\r\n\r\n    const pieElements = document.querySelectorAll(`.${pieName}`);\r\n    const elements = [].slice.call(pieElements);\r\n    // add index to all progressbar\r\n    elements.map((item, idx) => {\r\n      const id = JSON.parse(item.getAttribute(\"data-pie\"));\r\n      item.setAttribute(\r\n        \"data-pie-index\",\r\n        id.index || globalObj.index || idx + 1,\r\n      );\r\n    });\r\n\r\n    this._elements = elements;\r\n  }\r\n\r\n  /**\r\n   * @param {object} outside\r\n   */\r\n  initial(outside) {\r\n    const triggeredOutside = outside || this._elements;\r\n    Array.isArray(triggeredOutside)\r\n      ? triggeredOutside.map((element) => this._createSVG(element))\r\n      : this._createSVG(triggeredOutside);\r\n  }\r\n\r\n  /**\r\n   * @param {SVGAElement} svg\r\n   * @param {HTMLElement} target\r\n   * @param {Object} options\r\n   */\r\n  _progress(svg, target, options) {\r\n    const pieName = this._className;\r\n    if (options.number) {\r\n      insertAdElement(svg, percent(options, pieName));\r\n    }\r\n\r\n    const progressCircle = querySelector(`.${pieName}-circle-${options.index}`);\r\n\r\n    const configCircle = {\r\n      fill: \"none\",\r\n      \"stroke-width\": options.stroke,\r\n      \"stroke-dashoffset\": \"264\",\r\n      ...strokeDasharray(),\r\n      ...strokeLinecap(options),\r\n    };\r\n    setAttribute(progressCircle, configCircle);\r\n\r\n    // animation progress\r\n    this.animationTo({ ...options, element: progressCircle }, true);\r\n\r\n    // set style and rotation\r\n    progressCircle.setAttribute(\"style\", styleTransform(options));\r\n\r\n    // set color\r\n    setColor(progressCircle, options);\r\n\r\n    // set width and height on div\r\n    target.setAttribute(\r\n      \"style\",\r\n      `width:${options.size}px;height:${options.size}px;`,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Callback function\r\n   *\r\n   * @param {Object} options\r\n   * @param {Boolean} initial\r\n   */\r\n  animationTo(options, initial = false) {\r\n    const pieName = this._className;\r\n    const previousConfigObj = JSON.parse(\r\n      querySelector(`[data-pie-index=\"${options.index}\"]`).getAttribute(\r\n        \"data-pie\",\r\n      ),\r\n    );\r\n\r\n    const circleElement = querySelector(`.${pieName}-circle-${options.index}`);\r\n\r\n    if (!circleElement) return;\r\n\r\n    // merging all configuration objects\r\n    const commonConfiguration = initial\r\n      ? options\r\n      : {\r\n          ...defaultOptions,\r\n          ...previousConfigObj,\r\n          ...options,\r\n          ...this._globalObj,\r\n        };\r\n\r\n    // update color circle\r\n    if (!initial) {\r\n      setColor(circleElement, commonConfiguration);\r\n    }\r\n\r\n    // font color update\r\n    if (!initial && commonConfiguration.number) {\r\n      const fontconfig = {\r\n        fill: commonConfiguration.fontColor,\r\n        ...fontSettings(commonConfiguration),\r\n      };\r\n      const textElement = querySelector(\r\n        `.${pieName}-text-${commonConfiguration.index}`,\r\n      );\r\n      setAttribute(textElement, fontconfig);\r\n    }\r\n\r\n    const centerNumber = querySelector(`.${pieName}-percent-${options.index}`);\r\n\r\n    if (commonConfiguration.animationOff) {\r\n      if (commonConfiguration.number)\r\n        centerNumber.textContent = `${commonConfiguration.percent}`;\r\n      circleElement.setAttribute(\r\n        \"stroke-dashoffset\",\r\n        dashOffset(commonConfiguration.percent * ((100 - (commonConfiguration.cut || 0)) / 100), commonConfiguration.inverse),\r\n      );\r\n      return;\r\n    }\r\n\r\n    // get numer percent from data-angel\r\n    let angle = JSON.parse(circleElement.getAttribute(\"data-angel\"));\r\n\r\n    // round if number is decimal\r\n    const percent = Math.round(options.percent);\r\n\r\n    // if percent 0 then set at start 0%\r\n    if (percent === 0) {\r\n      if (commonConfiguration.number) centerNumber.textContent = \"0\";\r\n      circleElement.setAttribute(\"stroke-dashoffset\", \"264\");\r\n    }\r\n\r\n    if (percent > 100 || percent < 0 || angle === percent) return;\r\n\r\n    let request;\r\n    let i = initial ? 0 : angle;\r\n\r\n    const fps = commonConfiguration.speed || 1000;\r\n    const interval = 1000 / fps;\r\n    const tolerance = 0.1;\r\n    let then = performance.now();\r\n\r\n    const performAnimation = (now) => {\r\n      request = requestAnimationFrame(performAnimation);\r\n      const delta = now - then;\r\n\r\n      if (delta >= interval - tolerance) {\r\n        then = now - (delta % interval);\r\n\r\n        // angle >= commonConfiguration.percent ? i-- : i++;\r\n        i = i < commonConfiguration.percent ? i + 1 : i - 1;\r\n      }\r\n\r\n      circleElement.setAttribute(\r\n        \"stroke-dashoffset\",\r\n        dashOffset(i, commonConfiguration.inverse, commonConfiguration.cut),\r\n      );\r\n      if (centerNumber && commonConfiguration.number) {\r\n        centerNumber.textContent = `${i}`;\r\n      }\r\n\r\n      circleElement.setAttribute(\"data-angel\", i);\r\n      circleElement.parentNode.setAttribute(\"aria-valuenow\", i);\r\n\r\n      if (i === percent) {\r\n        cancelAnimationFrame(request);\r\n      }\r\n\r\n      // return;\r\n    };\r\n\r\n    requestAnimationFrame(performAnimation);\r\n  }\r\n\r\n  /**\r\n   * Create svg elements\r\n   *\r\n   * @param {HTMLElement} element\r\n   */\r\n  _createSVG(element) {\r\n    const index = element.getAttribute(\"data-pie-index\");\r\n    const json = JSON.parse(element.getAttribute(\"data-pie\"));\r\n\r\n    const options = { ...defaultOptions, ...json, index, ...this._globalObj };\r\n\r\n    const svg = createNSElement(\"svg\");\r\n\r\n    const configSVG = {\r\n      role: \"progressbar\",\r\n      width: options.size,\r\n      height: options.size,\r\n      viewBox: \"0 0 100 100\",\r\n      \"aria-valuemin\": \"0\",\r\n      \"aria-valuemax\": \"100\",\r\n    };\r\n\r\n    setAttribute(svg, configSVG);\r\n\r\n    // colorCircle\r\n    if (options.colorCircle) {\r\n      svg.appendChild(this._circle(options));\r\n    }\r\n\r\n    // gradient\r\n    if (options.lineargradient) {\r\n      svg.appendChild(gradient(options));\r\n    }\r\n\r\n    svg.appendChild(this._circle(options, \"top\"));\r\n\r\n    element.appendChild(svg);\r\n\r\n    this._progress(svg, element, options);\r\n  }\r\n\r\n  /**\r\n   * Create circle top/bottom\r\n   *\r\n   * @param {Object} options\r\n   * @param {String} where\r\n   * @returns {SVGElement}\r\n   */\r\n  _circle(options, where = \"bottom\") {\r\n    const circle = createNSElement(\"circle\");\r\n\r\n    let configCircle = {};\r\n    if (options.cut) {\r\n      const dashoffset = 264 - (100 - options.cut) * 2.64;\r\n      configCircle = {\r\n        \"stroke-dashoffset\": options.inverse ? -dashoffset : dashoffset,\r\n        style: styleTransform(options),\r\n        ...strokeDasharray(),\r\n        ...strokeLinecap(options),\r\n      };\r\n    }\r\n\r\n    const objCircle = {\r\n      fill: options.fill,\r\n      stroke: options.colorCircle,\r\n      \"stroke-width\": options.strokeBottom || options.stroke,\r\n      ...configCircle,\r\n    };\r\n\r\n    if (options.strokeDasharray) {\r\n      Object.assign(objCircle, { ...strokeDasharray(options.strokeDasharray) });\r\n    }\r\n\r\n    const typeCircle =\r\n      where === \"top\"\r\n        ? { class: `${this._className}-circle-${options.index}` }\r\n        : objCircle;\r\n\r\n    const objConfig = {\r\n      cx: \"50%\",\r\n      cy: \"50%\",\r\n      r: 42,\r\n      \"shape-rendering\": \"geometricPrecision\",\r\n      ...typeCircle,\r\n    };\r\n\r\n    setAttribute(circle, objConfig);\r\n\r\n    return circle;\r\n  }\r\n}\r\n"],"names":["defaultOptions","colorSlice","fontColor","fontSize","fontWeight","lineargradient","number","round","fill","unit","rotation","size","stroke","styleTransform","_ref","animationSmooth","smoothAnimation","strokeDasharray","type","strokeLinecap","_ref2","fontSettings","options","querySelector","element","document","setColor","_ref3","index","setAttribute","object","key","createNSElement","createElementNS","tspan","className","classList","add","textContent","dashOffset","count","inverse","cut","cutChar","angle","insertAdElement","el","insertAdjacentElement","gradient","_ref4","defsElement","linearGradient","id","countGradient","slice","call","appendChild","map","item","stopElements","stopObj","offset","length","percent","creatTextElementSVG","obj","x","y","dy","textPosition","CircularProgressBar","constructor","pieName","globalObj","_className","_globalObj","pieElements","querySelectorAll","elements","idx","JSON","parse","getAttribute","_elements","initial","outside","triggeredOutside","Array","isArray","_createSVG","_progress","svg","target","progressCircle","configCircle","animationTo","previousConfigObj","circleElement","commonConfiguration","fontconfig","textElement","centerNumber","animationOff","Math","request","i","fps","speed","interval","tolerance","then","performance","now","performAnimation","requestAnimationFrame","delta","parentNode","cancelAnimationFrame","json","configSVG","role","width","height","viewBox","colorCircle","_circle","where","circle","dashoffset","style","objCircle","strokeBottom","Object","assign","typeCircle","class","objConfig","cx","cy","r"],"mappings":"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"}